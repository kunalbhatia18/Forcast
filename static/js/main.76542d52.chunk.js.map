{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","class","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","error","src_SeasonDisplay_0","src_Spinner","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACjBC,OAAQ,CACJC,KAAM,sBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,mBACNC,SAAU,eAwBHE,EAXO,SAACC,GACnB,IAVeC,EAAIC,EAUbC,GAVSF,EAUUD,EAAMC,KAVZC,GAUgB,IAAIE,MAAOC,YATnC,GAAKH,EAAM,EACXD,EAAM,EAAI,SAAW,SAGrBA,EAAM,EAAI,SAAW,UAIHK,EAEFZ,EAAaS,GAAhCP,EAFqBU,EAErBV,KAAOC,EAFcS,EAEdT,SACf,OAAQU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAC1CI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBd,EAAvB,WACZU,EAAAC,EAAAC,cAAA,UACCb,GAEDW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,aC7BVe,EAAU,SAACZ,GACb,OACIO,EAAAC,EAAAC,cAAA,OAAKI,MAAM,oBACPN,EAAAC,EAAAC,cAAA,OAAKI,MAAM,sBACNb,EAAMc,WAMvBF,EAAQG,aAAe,CACnBD,QAAU,cAGCF,QCJTI,6MACFC,MAAQ,CAAEhB,IAAI,KAAMiB,aAAa,uFAEd,IAAAC,EAAAC,KACfC,OAAOC,UAAUC,YAAYC,mBACzB,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAACzB,IAAKwB,EAASE,OAAOC,YAChD,SAAAC,GAAK,OAAEV,EAAKO,SAAS,CAACR,aAAcW,EAAMf,6CAa9C,OAAGM,KAAKH,MAAMC,eAAiBE,KAAKH,MAAMhB,IAChCM,EAAAC,EAAAC,cAAA,sBAAcW,KAAKH,MAAMC,eAE/BE,KAAKH,MAAMC,cAAgBE,KAAKH,MAAMhB,IAC/BM,EAAAC,EAAAC,cAACqB,EAAD,CAAe7B,IAAKmB,KAAKH,MAAMhB,MAGnCM,EAAAC,EAAAC,cAAEsB,EAAF,CAAUjB,QAAQ,8CA1BfkB,IAAMC,WA6BxBC,IAASC,OACL5B,EAAAC,EAAAC,cAAC2B,EAAD,MAAOC,SAASC,cAAc","file":"static/js/main.76542d52.chunk.js","sourcesContent":["import React from 'react';\nimport './SeasonDisplay.css';\n\nconst seasonConfig = {\n    summer: {\n        text: \"let's hit the beach\" ,\n        iconName: 'sun'\n    },\n    winter: {\n        text: \"burr! it's cold!\" ,\n        iconName: 'snowflake'\n    }\n};\n\nconst getSeason = (lat,month) => {\n    if(month > 2 && month<9){\n        return lat > 0 ? 'summer' : 'winter';\n    }\n    else{\n        return lat > 0 ? 'winter' : 'summer';\n    }\n}\n\nconst SeasonDisplay = (props) => {\n    const season = getSeason(props.lat,new Date().getMonth())\n    const { text , iconName} = seasonConfig[season];\n    return( <div className={`season-display ${season}`}>\n    <i className={`icon-left massive ${iconName} icon`} />    \n    <h1>\n    {text}\n    </h1>\n    <i className={`icon-right massive ${iconName} icon`} />\n    </div>);\n};\nexport default SeasonDisplay;\n","import React from 'react';\n\nconst Spinner = (props) =>  {\n    return (\n        <div class=\"ui active dimmer\">\n            <div class=\"ui big text loader\">\n                {props.message}\n            </div>\n        </div>  \n    );\n};\n\nSpinner.defaultProps = {\n    message : 'Loading...'\n};\n\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n// const App = () => {\n//     window.navigator.geolocation.getCurrentPosition(\n//         (position)=>console.log(position),\n//         (error)=>console.log(error)\n//     );\n//     return <div> Hi there! </div>;\n// };\n\nclass App extends React.Component {\n    state = { lat:null, errorMessage:'' };\n\n    componentDidMount(){\n        window.navigator.geolocation.getCurrentPosition(\n            position => this.setState({lat: position.coords.latitude}),\n            error=>this.setState({errorMessage: error.message})\n            );\n    }\n    // render(){\n    // return (\n    //    <div>\n    //        Latitude: {this.state.lat}<br/>\n    //        Error: {this.state.errorMessage}\n    //     </div>\n    // );\n    // }\n\n    render(){\n        if(this.state.errorMessage && !this.state.lat){\n            return<div> Error: {this.state.errorMessage}</div>\n        }\n        if(!this.state.errorMessage && this.state.lat){\n            return <SeasonDisplay lat={this.state.lat}/>\n        }\n\n        return < Spinner message=\"Please accept the location request\"/>; \n    }\n}\nReactDOM.render(\n    <App/>,document.querySelector('#root')\n);"],"sourceRoot":""}